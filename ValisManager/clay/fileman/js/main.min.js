function Directory(e, n, r) { if (!e) e = ""; this.fullPath = e; this.name = RoxyUtils.GetFilename(e); if (!this.name) this.name = "My files"; this.path = RoxyUtils.GetPath(e); this.dirs = n ? n : 0; this.files = r ? r : 0; this.filesList = new Array; this.Show = function () { var e = this.GetHtml(); var t = null; t = $('li[data-path="' + this.path + '"]'); if (t.length == 0) t = $("#pnlDirList"); else { if (t.children("ul").length == 0) t.append("<ul></ul>"); t = t.children("ul") } if (t) { t.append(e); this.SetEvents() } }; this.SetEvents = function () { var e = this.GetElement(); e.draggable({ helper: makeDragDir, start: startDragDir, cursorAt: { left: 10, top: 10 }, delay: 200 }); e = e.children("div"); e.click(function (e) { selectDir(this) }); e.bind("contextmenu", function (e) { e.stopPropagation(); e.preventDefault(); closeMenus("file"); selectDir(this); var t = e.pageY - $("#menuDir").height(); if (t < 0) t = 0; $("#menuDir").css({ top: t + "px", left: e.pageX + "px" }).show(); return false }); e.droppable({ drop: moveObject, over: dragFileOver, out: dragFileOut }); e = e.children(".dirPlus"); e.click(function (e) { e.stopPropagation(); var t = Directory.Parse($(this).closest("li").attr("data-path")); t.Expand() }) }; this.GetHtml = function () { var e = '<li data-path="' + this.fullPath + '" data-dirs="' + this.dirs + '" data-files="' + this.files + '" class="directory">'; e += '<div><img src="images/' + (this.dirs > 0 ? "dir-plus.png" : "blank.gif") + '" class="dirPlus" width="9" height="9">'; e += '<img src="images/folder.png" class="dir"><span class="name">' + this.name + " (" + this.files + ")</span></div>"; e += "</li>"; return e }; this.SetStatusBar = function () { $("#pnlStatus").html(this.files + " " + (this.files == 1 ? t("file") : t("files"))) }; this.Select = function () { var e = this.GetElement(); e.children("div").addClass("selected"); $('#pnlDirList li[data-path!="' + this.fullPath + '"] > div').removeClass("selected"); e.children("img.dir").prop("src", "images/folder.png"); this.SetStatusBar(); var t = this.GetParent(); while (t) { t.Expand(true); t = t.GetParent() } this.Expand(true); this.ListFiles(true) }; this.GetElement = function () { return $('li[data-path="' + this.fullPath + '"]') }; this.IsExpanded = function () { var e = this.GetElement().children("ul"); return e && e.is(":visible") }; this.IsListed = function () { if ($("#hdDir").val() == this.fullPath) return true; return false }; this.GetExpanded = function (e) { var t = new Array; if (!e) e = $("#pnlDirList"); e.children("li").each(function () { var e = $(this).attr("data-path"); var n = new Directory(e); if (n) { if (n.IsExpanded() && e) t.push(e); t = t.concat(n.GetExpanded(n.GetElement().children("ul"))) } }); return t }; this.RestoreExpanded = function (e) { for (i = 0; i < e.length; i++) { var t = Directory.Parse(e[i]); if (t) t.Expand(true) } }; this.GetParent = function () { return Directory.Parse(this.path) }; this.SetOpened = function () { var e = this.GetElement(); if (e.find("li").length < 1) e.children("div").children(".dirPlus").prop("src", "images/blank.gif"); else if (this.IsExpanded()) e.children("div").children(".dirPlus").prop("src", "images/dir-minus.png"); else e.children("div").children(".dirPlus").prop("src", "images/dir-plus.png") }; this.Update = function (e) { var t = this.GetElement(); if (e) { this.fullPath = e; this.name = RoxyUtils.GetFilename(e); if (!this.name) this.name = "My files"; this.path = RoxyUtils.GetPath(e) } t.attr("data-path", this.fullPath); t.attr("data-dirs", this.dirs); t.attr("data-files", this.files); t.children("div").children(".name").html(this.name + " (" + this.files + ")"); this.SetOpened() }; this.LoadAll = function (e) { var n = this.GetExpanded(); var r = RoxyFilemanConf.DIRLIST; if (!r) { alert(t("E_ActionDisabled")); return } $("#pnlLoadingDirs").show(); $("#pnlDirList").hide(); r = RoxyUtils.AddParam(r, "type", RoxyUtils.GetUrlParam("type")); var s = this; $.ajax({ url: r, dataType: "json", async: true, success: function (t) { $("#pnlDirList").children("li").remove(); for (i = 0; i < t.length; i++) { var r = new Directory(t[i].p, t[i].d, t[i].f); r.Show() } $("#pnlLoadingDirs").hide(); $("#pnlDirList").show(); s.RestoreExpanded(n); var r = Directory.Parse(e); if (r) r.Select() }, error: function (e) { $("#pnlLoadingDirs").hide(); $("#pnlDirList").show(); alert(t("E_LoadingAjax") + " " + RoxyFilemanConf.DIRLIST) } }) }; this.Expand = function (e) { var t = this.GetElement(); var n = t.children("ul"); if (this.IsExpanded() && !e) n.hide(); else n.show(); this.SetOpened() }; this.Create = function (e) { if (!e) return false; else if (!RoxyFilemanConf.CREATEDIR) { alert(t("E_ActionDisabled")); return } var n = RoxyUtils.AddParam(RoxyFilemanConf.CREATEDIR, "d", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { r.LoadAll(RoxyUtils.MakePath(r.fullPath, e)); i = true } else { alert(t.msg) } }, error: function (e) { alert(t("E_LoadingAjax") + " " + r.name) } }); return i }; this.Delete = function () { if (!RoxyFilemanConf.DELETEDIR) { alert(t("E_ActionDisabled")); return } var e = RoxyUtils.AddParam(RoxyFilemanConf.DELETEDIR, "d", this.fullPath); e = RoxyUtils.AddParam(e, "scId", RoxyUtils.GetUrlParam("scId")); e = RoxyUtils.AddParam(e, "survey", RoxyUtils.GetUrlParam("survey")); var n = this; var r = false; $.ajax({ url: e, dataType: "json", async: false, success: function (e) { if (e.res.toLowerCase() == "ok") { var t = n.GetParent(); t.dirs--; t.Update(); t.Select(); n.GetElement().remove(); r = true } if (e.msg) alert(e.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + n.name) } }); return r }; this.Rename = function (e) { if (!e) return false; else if (!RoxyFilemanConf.RENAMEDIR) { alert(t("E_ActionDisabled")); return } var n = RoxyUtils.AddParam(RoxyFilemanConf.RENAMEDIR, "d", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { var n = RoxyUtils.MakePath(r.path, e); r.Update(n); r.Select(); i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + r.name) } }); return i }; this.Copy = function (e) { if (!RoxyFilemanConf.COPYDIR) { alert(t("E_ActionDisabled")); return } var n = RoxyUtils.AddParam(RoxyFilemanConf.COPYDIR, "d", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { var n = Directory.Parse(e); if (n) { n.LoadAll(n.fullPath) } i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + n) } }); return i }; this.Move = function (e) { if (!e) return false; else if (!RoxyFilemanConf.MOVEDIR) { alert(t("E_ActionDisabled")); return } var n = RoxyUtils.AddParam(RoxyFilemanConf.MOVEDIR, "d", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { r.LoadAll(RoxyUtils.MakePath(e, r.name)); i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + r.name) } }); return i }; this.ListFiles = function (e) { $("#pnlLoading").show(); $("#pnlEmptyDir").hide(); $("#pnlFileList").hide(); $("#pnlSearchNoFiles").hide(); this.LoadFiles(e) }; this.FilesLoaded = function (e) { e = this.SortFiles(e); $("#pnlFileList").html(""); for (i = 0; i < e.length; i++) { var t = e[i]; t.Show() } $("#hdDir").val(this.fullPath); $("#pnlLoading").hide(); if ($("#pnlFileList").children("li").length == 0) $("#pnlEmptyDir").show(); this.files = $("#pnlFileList").children("li").length; this.Update(); this.SetStatusBar(); filterFiles(); switchView(); $("#pnlFileList").show() }; this.LoadFiles = function (e) { if (!RoxyFilemanConf.FILESLIST) { alert(t("E_ActionDisabled")); return } var n = new Array; var r = RoxyFilemanConf.FILESLIST; r = RoxyUtils.AddParam(r, "d", this.fullPath); r = RoxyUtils.AddParam(r, "type", RoxyUtils.GetUrlParam("type")); r = RoxyUtils.AddParam(r, "scId", RoxyUtils.GetUrlParam("scId")); r = RoxyUtils.AddParam(r, "survey", RoxyUtils.GetUrlParam("survey")); var s = this; if (!this.IsListed() || e) { $.ajax({ url: r, dataType: "json", async: true, success: function (e) { for (i = 0; i < e.length; i++) { n.push(new File(e[i].p, e[i].s, e[i].t, e[i].w, e[i].h, e[i].fileid, e[i].url)) } s.FilesLoaded(n) }, error: function (e) { alert(t("E_LoadingAjax") + " " + r) } }) } else { $("#pnlFileList li").each(function () { n.push(new File($(this).attr("data-path"), $(this).attr("data-size"), $(this).attr("data-time"), $(this).attr("data-w"), $(this).attr("data-h"))) }); s.FilesLoaded(n) } return n }; this.SortByName = function (e, t) { e.sort(function (e, n) { var r = t == "desc" ? 0 : 2; e = e.name.toLowerCase(); n = n.name.toLowerCase(); if (e > n) return -1 + r; else if (e < n) return 1 - r; else return 0 }); return e }; this.SortBySize = function (e, t) { e.sort(function (e, n) { var r = t == "desc" ? 0 : 2; e = parseInt(e.size); n = parseInt(n.size); if (e > n) return -1 + r; else if (e < n) return 1 - r; else return 0 }); return e }; this.SortByTime = function (e, t) { e.sort(function (e, n) { var r = t == "desc" ? 0 : 2; e = parseInt(e.time); n = parseInt(n.time); if (e > n) return -1 + r; else if (e < n) return 1 - r; else return 0 }); return e }; this.SortFiles = function (e) { var t = $("#ddlOrder").val(); if (!t) t = "name"; switch (t) { case "size": e = this.SortBySize(e, "asc"); break; case "size_desc": e = this.SortBySize(e, "desc"); break; case "time": e = this.SortByTime(e, "asc"); break; case "time_desc": e = this.SortByTime(e, "desc"); break; case "name_desc": e = this.SortByName(e, "desc"); break; default: e = this.SortByName(e, "asc") } return e } } function File(e, n, r, i, s, o, u) { this.fullPath = e; this.type = RoxyUtils.GetFileType(e); this.name = RoxyUtils.GetFilename(e); this.ext = RoxyUtils.GetFileExt(e); this.path = RoxyUtils.GetPath(e); this.icon = RoxyUtils.GetFileIcon(e); this.bigIcon = this.icon.replace("filetypes", "filetypes/big"); this.image = e; this.size = n ? n : RoxyUtils.GetFileSize(e); this.time = r; this.width = i ? i : 0; this.height = s ? s : 0; this.fileid = o ? o : 0; this.url = u ? u : ""; this.Show = function () { html = '<li data-fileid="' + this.fileid + '" data-url="' + this.url + '" data-path="' + this.fullPath + '" data-time="' + this.time + '" data-icon="' + this.icon + '" data-w="' + this.width + '" data-h="' + this.height + '" data-size="' + this.size + '" data-icon-big="' + (this.IsImage() ? this.fullPath : this.bigIcon) + '" title="' + this.name + '">'; html += '<img src="' + this.icon + '" class="icon">'; html += '<span class="time">' + RoxyUtils.FormatDate(new Date(this.time * 1e3)) + "</span>"; html += '<span class="name">' + this.name + "</span>"; html += '<span class="size">' + RoxyUtils.FormatFileSize(this.size) + "</span>"; html += "</li>"; $("#pnlFileList").append(html); var e = $("#pnlFileList li:last"); e.draggable({ helper: makeDragFile, start: startDragFile, cursorAt: { left: 10, top: 10 }, delay: 200 }); e.click(function (e) { selectFile(this) }); e.dblclick(function (e) { selectFile(this); setFile() }); e.tooltip({ show: { delay: 700 }, track: true, content: tooltipContent }); e.bind("contextmenu", function (e) { e.stopPropagation(); e.preventDefault(); closeMenus("dir"); selectFile(this); $(this).tooltip("close"); var t = e.pageY - $("#menuFile").height(); if (t < 0) t = 0; $("#menuFile").css({ top: t + "px", left: e.pageX + "px" }).show(); return false }) }; this.GetElement = function () { return $('li[data-path="' + this.fullPath + '"]') }; this.IsImage = function () { var e = false; if (this.type == "image") e = true; return e }; this.Delete = function () { if (!RoxyFilemanConf.DELETEFILE) { alert(t("E_ActionDisabled")); return } var e = RoxyUtils.AddParam(RoxyFilemanConf.DELETEFILE, "fileid", this.fileid); e = RoxyUtils.AddParam(e, "scId", RoxyUtils.GetUrlParam("scId")); e = RoxyUtils.AddParam(e, "survey", RoxyUtils.GetUrlParam("survey")); var n = this; $.ajax({ url: e, dataType: "json", async: false, success: function (e) { if (e.res.toLowerCase() == "ok") { $('li[data-path="' + n.fullPath + '"]').remove(); var t = Directory.Parse(n.path); if (t) { t.files--; t.Update(); t.SetStatusBar() } } else { alert(e.msg) } }, error: function (n) { alert(t("E_LoadingAjax") + " " + e) } }) }; this.Rename = function (e) { if (!RoxyFilemanConf.RENAMEFILE) { alert(t("E_ActionDisabled")); return false } if (!e) return false; var n = RoxyUtils.AddParam(RoxyFilemanConf.RENAMEFILE, "f", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { var n = RoxyUtils.MakePath(this.path, e); $('li[data-path="' + r.fullPath + '"] .icon').attr("src", RoxyUtils.GetFileIcon(e)); $('li[data-path="' + r.fullPath + '"] .name').text(e); $('li[data-path="' + n + '"]').attr("data-path", n); i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + n) } }); return i }; this.Copy = function (e) { if (!RoxyFilemanConf.COPYFILE) { alert(t("E_ActionDisabled")); return } var n = RoxyUtils.AddParam(RoxyFilemanConf.COPYFILE, "f", this.fullPath); n = RoxyUtils.AddParam(n, "n", e); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { var n = Directory.Parse(e); if (n) { n.files++; n.Update(); n.SetStatusBar(); n.ListFiles(true) } i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + n) } }); return i }; this.Move = function (e) { if (!RoxyFilemanConf.MOVEFILE) { alert(t("E_ActionDisabled")); return } newFullPath = RoxyUtils.MakePath(e, this.name); var n = RoxyUtils.AddParam(RoxyFilemanConf.MOVEFILE, "f", this.fullPath); n = RoxyUtils.AddParam(n, "n", newFullPath); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); var r = this; var i = false; $.ajax({ url: n, dataType: "json", async: false, success: function (t) { if (t.res.toLowerCase() == "ok") { $('li[data-path="' + r.fullPath + '"]').remove(); var n = Directory.Parse(r.path); if (n) { n.files--; n.Update(); n.SetStatusBar(); n = Directory.Parse(e); n.files++; n.Update() } i = true } if (t.msg) alert(t.msg) }, error: function (e) { alert(t("E_LoadingAjax") + " " + n) } }); return i } } function selectFile(e) { $("#pnlFileList li").removeClass("selected"); $(e).prop("class", "selected"); var n = RoxyUtils.GetFilename($(e).attr("data-path")); n += " (" + t("Size") + ": " + RoxyUtils.FormatFileSize($(e).attr("data-size")); if ($(e).attr("data-w") > 0) n += ", " + t("Dimensions") + ":" + $(e).attr("data-w") + "x" + $(e).attr("data-h"); n += ")"; $("#pnlStatus").html(n) } function selectDir(e) { var t = Directory.Parse($(e).parent("li").attr("data-path")); if (t) t.Select() } function startDragDir() { } function startDragFile() { selectFile(this) } function dragFileOver() { $(this).children("img.dir").attr("src", "images/folder-green.png") } function dragFileOut() { $("#pnlDirList").find("img.dir").attr("src", "images/folder.png") } function makeDragFile(e) { var t = new File($(e.target).closest("li").attr("data-path")); return '<div class="pnlDragFile" data-path="' + t.fullPath + '"><img src="' + t.bigIcon + '" align="absmiddle">&nbsp;' + t.name + "</div>" } function makeDragDir(e) { var t = new Directory($(e.target).attr("data-path") ? $(e.target).attr("data-path") : $(e.target).closest("li").attr("data-path")); return '<div class="pnlDragDir" data-path="' + t.fullPath + '"><img src="images/folder.png" align="absmiddle">&nbsp;' + t.name + "</div>" } function moveDir(e, t, n) { var r = Directory.Parse(t.draggable.attr("data-path")); var i = Directory.Parse($(n).parent("li").attr("data-path")); if (i.fullPath != r.path) r.Move(i.fullPath) } function moveFile(e, t, n) { var r = new File(t.draggable.attr("data-path")); var i = Directory.Parse($(n).parent("li").attr("data-path")); var s = Directory.Parse(r.path); if (r.path != i.fullPath) r.Move(i.fullPath) } function moveObject(e, t) { e.stopPropagation(); if (t.draggable.hasClass("directory")) moveDir(e, t, this); else moveFile(e, t, this); dragFileOut() } function clickFirstOnEnter(e) { $("#" + e).unbind("keypress"); $(".actions input").each(function () { this.blur() }); $("#" + e).keypress(function (e) { if (e.keyCode == $.ui.keyCode.ENTER) { e.stopPropagation(); $(this).parent().find(".ui-dialog-buttonset button").eq(0).trigger("click") } }) } function addDir() { var e = getSelectedDir(); if (!e) return; clickFirstOnEnter("pnlDirName"); $("#txtDirName").val(""); var n = {}; n[t("CreateDir")] = function () { var n = $.trim($("#txtDirName").val()); if (!n) alert(t("E_MissingDirName")); if (e.Create(n)) { $("#pnlDirName").dialog("close") } }; n[t("Cancel")] = function () { $("#pnlDirName").dialog("close") }; $("#pnlDirName").dialog({ title: t("T_CreateDir"), modal: true, buttons: n }) } function addFile() { clickFirstOnEnter("dlgAddFile"); var e = {}; e[t("Upload")] = function () { if (!$("#fileUploads").val()) alert(t("E_SelectFiles")); else { if (!RoxyFilemanConf.UPLOAD) { alert(t("E_ActionDisabled")) } else { if (typeof FormData == "undefined") { alert("Is not supported by your browser! Please change browser!"); return } var e = new FormData; e.append("Executable", $("#fileUploads")[0].files[0]); var n = RoxyUtils.AddParam(RoxyFilemanConf.UPLOAD, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "survey", RoxyUtils.GetUrlParam("survey")); $.ajax({ url: n, dataType: "json", data: e, type: "POST", processData: false, contentType: false, cache: false, success: function (e, t, n) { fileUploaded(e) } }) } } }; e[t("Cancel")] = function () { $("#dlgAddFile").dialog("close") }; $("#dlgAddFile").dialog({ title: t("T_AddFile"), modal: true, buttons: e }) } function fileUploaded(e) { if (e.res == "ok" && e.msg) { $("#dlgAddFile").dialog("close"); var t = getSelectedDir(); t.ListFiles(true); alert(e.msg) } else if (e.res == "ok") { $("#dlgAddFile").dialog("close"); var t = getSelectedDir(); t.ListFiles(true) } else alert(e.msg) } function renameDir() { var e = getSelectedDir(); if (!e) return; if ($('[data-path="' + e.fullPath + '"]').parents("li").length < 1) { alert(t("E_CannotRenameRoot")); return } clickFirstOnEnter("pnlDirName"); $("#txtDirName").val(e.name); var n = {}; n[t("Rename")] = function () { var n = $.trim($("#txtDirName").val()); if (!n) alert(t("E_MissingDirName")); if (e.Rename(n)) $("#pnlDirName").dialog("close") }; n[t("Cancel")] = function () { $("#pnlDirName").dialog("close") }; $("#pnlDirName").dialog({ title: t("T_RenameDir"), modal: true, buttons: n }); RoxyUtils.SelectText("txtDirName", 0, (new String(e.name)).length) } function renameFile() { var e = getSelectedFile(); if (!e) return; clickFirstOnEnter("pnlRenameFile"); $("#txtFileName").val(e.name); var n = {}; n[t("Rename")] = function () { var t = $.trim($("#txtFileName").val()); if (!t) alert("Missing file name"); else if (e.Rename(t)) { $('li[data-path="' + e.fullPath + '"] .name').text(t); $('li[data-path="' + e.fullPath + '"]').attr("data-path", RoxyUtils.MakePath(e.path, t)); $("#pnlRenameFile").dialog("close") } }; n[t("Cancel")] = function () { $("#pnlRenameFile").dialog("close") }; $("#pnlRenameFile").dialog({ title: t("T_RenameFile"), modal: true, buttons: n }); if (e.name.lastIndexOf(".") > 0) RoxyUtils.SelectText("txtFileName", 0, e.name.lastIndexOf(".")) } function getSelectedFile() { var e = null; if ($("#pnlFileList .selected").length > 0) e = new File($("#pnlFileList .selected").attr("data-path"), 0, 0, 0, 0, $("#pnlFileList .selected").attr("data-fileid"), $("#pnlFileList .selected").attr("data-url")); return e } function getSelectedDir() { return new Directory("survey", 0, 0) } function deleteDir(e) { var n = null; if (e) n = Directory.Parse(e); else n = getSelectedDir(); if (n && confirm(t("Q_DeleteFolder"))) { n.Delete() } } function deleteFile() { var e = getSelectedFile(); if (e && confirm(t("Q_DeleteFile"))) { e.Delete() } } function previewFile() { var e = getSelectedFile(); if (e) { var t = RoxyUtils.AddParam(e.url, "scId", RoxyUtils.GetUrlParam("scId")); window.open(t) } } function downloadFile() { var e = getSelectedFile(); if (e && RoxyFilemanConf.DOWNLOAD) { var n = RoxyUtils.AddParam(RoxyFilemanConf.DOWNLOAD, "f", e.fullPath); n = RoxyUtils.AddParam(n, "scId", RoxyUtils.GetUrlParam("scId")); n = RoxyUtils.AddParam(n, "fileid", e.fileid); window.frames["frmUploadFile"].location.href = n } else if (!RoxyFilemanConf.DOWNLOAD) alert(t("E_ActionDisabled")) } function downloadDir() { var e = getSelectedDir(); if (e && RoxyFilemanConf.DOWNLOADDIR) { var n = RoxyUtils.AddParam(RoxyFilemanConf.DOWNLOADDIR, "d", e.fullPath); window.frames["frmUploadFile"].location.href = n } else if (!RoxyFilemanConf.DOWNLOAD) alert(t("E_ActionDisabled")) } function closeMenus(e) { if (!e || e == "dir") $("#menuDir").fadeOut(); if (!e || e == "file") $("#menuFile").fadeOut() } function selectFirst() { var e = $("#pnlDirList li:first").children("div").first(); if (e.length > 0) selectDir(e); else window.setTimeout("selectFirst()", 300) } function tooltipContent() { if ($("#menuFile").is(":visible")) return ""; var e = ""; var n = File.Parse($(this).attr("data-path")); if ($("#hdViewType").val() == "thumb" && n.IsImage()) { e = n.fullPath + '<br><span class="filesize">' + t("Size") + ": " + RoxyUtils.FormatFileSize(n.size) + " " + t("Dimensions") + ": " + n.width + "x" + n.height + "</span>" } else if (n.IsImage()) { if (RoxyFilemanConf.GENERATETHUMB) { imgUrl = RoxyUtils.AddParam(RoxyFilemanConf.GENERATETHUMB, "f", n.fullPath); imgUrl = RoxyUtils.AddParam(imgUrl, "scId", RoxyUtils.GetUrlParam("scId")); imgUrl = RoxyUtils.AddParam(imgUrl, "fileid", $(this).attr("data-fileid")); imgUrl = RoxyUtils.AddParam(imgUrl, "width", RoxyFilemanConf.PREVIEW_THUMB_WIDTH); imgUrl = RoxyUtils.AddParam(imgUrl, "height", RoxyFilemanConf.PREVIEW_THUMB_HEIGHT) } else imgUrl = n.fullPath; e = '<img src="' + imgUrl + '" class="imgPreview"><br>' + n.name + ' <br><span class="filesize">' + t("Size") + ": " + RoxyUtils.FormatFileSize(n.size) + " " + t("Dimensions") + ": " + n.width + "x" + n.height + "</span>" } else e = n.fullPath + ' <span class="filesize">' + t("Size") + ": " + RoxyUtils.FormatFileSize(n.size) + "</span>"; return e } function filterFiles() { var e = $("#txtSearch").val(); $("#pnlSearchNoFiles").hide(); if ($("#pnlFileList li").length == 0) return; if (!e) { $("#pnlFileList li").show(); return } var t = 0; $("#pnlFileList li").each(function () { var n = $(this).children(".name").text(); if (n.toLowerCase().indexOf(e.toLowerCase()) > -1) { t++; $(this).show() } else { $(this).removeClass("selected"); $(this).hide() } }); if (t == 0) $("#pnlSearchNoFiles").show() } function sortFiles() { var e = getSelectedDir(); if (!e) return; e.ListFiles(); filterFiles(); switchView($("#hdViewType").val()) } function switchView(e) { if (e == $("#hdViewType").val()) return; if (!e) e = $("#hdViewType").val(); $(".btnView").removeClass("selected"); if (e == "thumb") { $("#pnlFileList .icon").attr("src", "images/blank.gif"); $("#pnlFileList").addClass("thumbView"); if ($("#dynStyle").length == 0) { $("head").append('<style id="dynStyle" />'); var t = "ul#pnlFileList.thumbView li{width:" + RoxyFilemanConf.THUMBS_VIEW_WIDTH + "px;}"; t += "ul#pnlFileList.thumbView li{height:" + (parseInt(RoxyFilemanConf.THUMBS_VIEW_HEIGHT) + 20) + "px;}"; t += "ul#pnlFileList.thumbView .icon{width:" + RoxyFilemanConf.THUMBS_VIEW_WIDTH + "px;}"; t += "ul#pnlFileList.thumbView .icon{height:" + RoxyFilemanConf.THUMBS_VIEW_HEIGHT + "px;}"; $("#dynStyle").html(t) } $("#pnlFileList li").each(function () { var e = $(this).attr("data-icon-big"); if (RoxyFilemanConf.GENERATETHUMB && RoxyUtils.IsImage($(this).attr("data-path"))) { e = RoxyUtils.AddParam(RoxyFilemanConf.GENERATETHUMB, "f", e); e = RoxyUtils.AddParam(e, "scId", RoxyUtils.GetUrlParam("scId")); e = RoxyUtils.AddParam(e, "fileid", $(this).attr("data-fileid")); e = RoxyUtils.AddParam(e, "width", RoxyFilemanConf.THUMBS_VIEW_WIDTH); e = RoxyUtils.AddParam(e, "height", RoxyFilemanConf.THUMBS_VIEW_HEIGHT) } $(this).children(".icon").css("background-image", "url(" + e + ")"); $(this).tooltip("option", "show", { delay: 50 }) }); $("#btnThumbView").addClass("selected") } else { $("#pnlFileList").removeClass("thumbView"); $("#pnlFileList li").each(function () { $(this).children(".icon").css("background-image", "").attr("src", $(this).attr("data-icon")); $(this).tooltip("option", "show", { delay: 500 }) }); $("#btnListView").addClass("selected") } $("#hdViewType").val(e) } function Clipboard(e, t) { this.action = e; this.obj = t } function cutDir() { var e = getSelectedDir(); if (e) { setClipboard("cut", e); e.GetElement().addClass("pale") } } function copyDir() { var e = getSelectedDir(); if (e) { setClipboard("copy", e) } } function cutFile() { var e = getSelectedFile(); if (e) { setClipboard("cut", e); e.GetElement().addClass("pale") } } function copyFile() { var e = getSelectedFile(); if (e) { setClipboard("copy", e) } } function pasteToFiles(e, t) { if ($(t).hasClass("pale")) { e.stopPropagation(); return false } var n = getSelectedDir(); if (!n) n = Directory.Parse($("#pnlDirList li:first").children("div").first()); if (n && clipBoard && clipBoard.obj) { if (clipBoard.action == "copy") clipBoard.obj.Copy(n.fullPath); else { clipBoard.obj.Move(n.fullPath); clearClipboard() } } return true } function pasteToDirs(e, t) { if ($(t).hasClass("pale")) { e.stopPropagation(); return false } var n = getSelectedDir(); if (!n) n = Directory.Parse($("#pnlDirList li:first").children("div").first()); if (clipBoard && n) { if (clipBoard.action == "copy") clipBoard.obj.Copy(n.fullPath); else { clipBoard.obj.Move(n.fullPath); clearClipboard(); n.ListFiles(true) } } else alert("error"); return true } function clearClipboard() { $("#pnlDirList li").removeClass("pale"); $("#pnlFileList li").removeClass("pale"); clipBoard = null; $(".paste").addClass("pale") } function setClipboard(e, t) { clearClipboard(); if (t) { clipBoard = new Clipboard(e, t); $(".paste").removeClass("pale") } } function ResizeLists() { var e = $(window).innerHeight() - $("#fileActions .actions").outerHeight() - $(".bottomLine").outerHeight(); $(".scrollPane").css("height", e) } function setFile() { var e = getSelectedFile(); if (!e) { alert(t("E_NoFileSelected")); return } window.opener.CKEDITOR.tools.callFunction(RoxyUtils.GetUrlParam("CKEditorFuncNum"), e.url); self.close() } function RoxyUtils() { } function RoxyFilemanConf() { } function RoxyLang() { } function t(e) { var t = e; if (RoxyLang && RoxyLang[e]) t = RoxyLang[e]; return t } Directory.Parse = function (e) { var t = false; var n = $("#pnlDirList").find('li[data-path="' + e + '"]'); if (n.length > 0) t = new Directory(n.attr("data-path"), n.attr("data-dirs"), n.attr("data-files")); return t }; File.Parse = function (e) { var t = false; var n = $("#pnlFileList").find('li[data-path="' + e + '"]'); if (n.length > 0) t = new File(n.attr("data-path"), n.attr("data-size"), n.attr("data-time"), n.attr("data-w"), n.attr("data-h")); return t }; var fileTypeIcons = new Object; fileTypeIcons["3gp"] = "file_extension_3gp.png"; fileTypeIcons["7z"] = "file_extension_7z.png"; fileTypeIcons["ace"] = "file_extension_ace.png"; fileTypeIcons["ai"] = "file_extension_ai.png"; fileTypeIcons["aif"] = "file_extension_aif.png"; fileTypeIcons["aiff"] = "file_extension_aiff.png"; fileTypeIcons["amr"] = "file_extension_amr.png"; fileTypeIcons["asf"] = "file_extension_asf.png"; fileTypeIcons["asx"] = "file_extension_asx.png"; fileTypeIcons["bat"] = "file_extension_bat.png"; fileTypeIcons["bin"] = "file_extension_bin.png"; fileTypeIcons["bmp"] = "file_extension_bmp.png"; fileTypeIcons["bup"] = "file_extension_bup.png"; fileTypeIcons["cab"] = "file_extension_cab.png"; fileTypeIcons["cbr"] = "file_extension_cbr.png"; fileTypeIcons["cda"] = "file_extension_cda.png"; fileTypeIcons["cdl"] = "file_extension_cdl.png"; fileTypeIcons["cdr"] = "file_extension_cdr.png"; fileTypeIcons["chm"] = "file_extension_chm.png"; fileTypeIcons["dat"] = "file_extension_dat.png"; fileTypeIcons["divx"] = "file_extension_divx.png"; fileTypeIcons["dll"] = "file_extension_dll.png"; fileTypeIcons["dmg"] = "file_extension_dmg.png"; fileTypeIcons["doc"] = "file_extension_doc.png"; fileTypeIcons["dss"] = "file_extension_dss.png"; fileTypeIcons["dvf"] = "file_extension_dvf.png"; fileTypeIcons["dwg"] = "file_extension_dwg.png"; fileTypeIcons["eml"] = "file_extension_eml.png"; fileTypeIcons["eps"] = "file_extension_eps.png"; fileTypeIcons["exe"] = "file_extension_exe.png"; fileTypeIcons["fla"] = "file_extension_fla.png"; fileTypeIcons["flv"] = "file_extension_flv.png"; fileTypeIcons["gif"] = "file_extension_gif.png"; fileTypeIcons["gz"] = "file_extension_gz.png"; fileTypeIcons["hqx"] = "file_extension_hqx.png"; fileTypeIcons["htm"] = "file_extension_htm.png"; fileTypeIcons["html"] = "file_extension_html.png"; fileTypeIcons["ifo"] = "file_extension_ifo.png"; fileTypeIcons["indd"] = "file_extension_indd.png"; fileTypeIcons["iso"] = "file_extension_iso.png"; fileTypeIcons["jar"] = "file_extension_jar.png"; fileTypeIcons["jpeg"] = "file_extension_jpeg.png"; fileTypeIcons["jpg"] = "file_extension_jpg.png"; fileTypeIcons["lnk"] = "file_extension_lnk.png"; fileTypeIcons["log"] = "file_extension_log.png"; fileTypeIcons["m4a"] = "file_extension_m4a.png"; fileTypeIcons["m4b"] = "file_extension_m4b.png"; fileTypeIcons["m4p"] = "file_extension_m4p.png"; fileTypeIcons["m4v"] = "file_extension_m4v.png"; fileTypeIcons["mcd"] = "file_extension_mcd.png"; fileTypeIcons["mdb"] = "file_extension_mdb.png"; fileTypeIcons["mid"] = "file_extension_mid.png"; fileTypeIcons["mov"] = "file_extension_mov.png"; fileTypeIcons["mp2"] = "file_extension_mp2.png"; fileTypeIcons["mp4"] = "file_extension_mp4.png"; fileTypeIcons["mpeg"] = "file_extension_mpeg.png"; fileTypeIcons["mpg"] = "file_extension_mpg.png"; fileTypeIcons["msi"] = "file_extension_msi.png"; fileTypeIcons["mswmm"] = "file_extension_mswmm.png"; fileTypeIcons["ogg"] = "file_extension_ogg.png"; fileTypeIcons["pdf"] = "file_extension_pdf.png"; fileTypeIcons["png"] = "file_extension_png.png"; fileTypeIcons["pps"] = "file_extension_pps.png"; fileTypeIcons["ps"] = "file_extension_ps.png"; fileTypeIcons["psd"] = "file_extension_psd.png"; fileTypeIcons["pst"] = "file_extension_pst.png"; fileTypeIcons["ptb"] = "file_extension_ptb.png"; fileTypeIcons["pub"] = "file_extension_pub.png"; fileTypeIcons["qbb"] = "file_extension_qbb.png"; fileTypeIcons["qbw"] = "file_extension_qbw.png"; fileTypeIcons["qxd"] = "file_extension_qxd.png"; fileTypeIcons["ram"] = "file_extension_ram.png"; fileTypeIcons["rar"] = "file_extension_rar.png"; fileTypeIcons["rm"] = "file_extension_rm.png"; fileTypeIcons["rmvb"] = "file_extension_rmvb.png"; fileTypeIcons["rtf"] = "file_extension_rtf.png"; fileTypeIcons["sea"] = "file_extension_sea.png"; fileTypeIcons["ses"] = "file_extension_ses.png"; fileTypeIcons["sit"] = "file_extension_sit.png"; fileTypeIcons["sitx"] = "file_extension_sitx.png"; fileTypeIcons["ss"] = "file_extension_ss.png"; fileTypeIcons["swf"] = "file_extension_swf.png"; fileTypeIcons["tgz"] = "file_extension_tgz.png"; fileTypeIcons["thm"] = "file_extension_thm.png"; fileTypeIcons["tif"] = "file_extension_tif.png"; fileTypeIcons["tmp"] = "file_extension_tmp.png"; fileTypeIcons["torrent"] = "file_extension_torrent.png"; fileTypeIcons["ttf"] = "file_extension_ttf.png"; fileTypeIcons["txt"] = "file_extension_txt.png"; fileTypeIcons["vcd"] = "file_extension_vcd.png"; fileTypeIcons["vob"] = "file_extension_vob.png"; fileTypeIcons["wav"] = "file_extension_wav.png"; fileTypeIcons["wma"] = "file_extension_wma.png"; fileTypeIcons["wmv"] = "file_extension_wmv.png"; fileTypeIcons["wps"] = "file_extension_wps.png"; fileTypeIcons["xls"] = "file_extension_xls.png"; fileTypeIcons["xpi"] = "file_extension_xpi.png"; fileTypeIcons["zip"] = "file_extension_zip.png"; var clipBoard = null; $(function () { RoxyUtils.LoadConfig(); var e = new Directory("survey", 0, 0); e.Select(); $("#wraper").show(); RoxyUtils.Translate(); $("body").click(function () { closeMenus() }); if (RoxyFilemanConf.DEFAULTVIEW) switchView(RoxyFilemanConf.DEFAULTVIEW); ResizeLists(); $(".actions input").tooltip({ track: true }); $(window).resize(ResizeLists); document.oncontextmenu = function () { return false }; $("#copyYear").html((new Date).getFullYear()) }); var FileTypes = new Array; FileTypes["image"] = new Array("jpg", "jpeg", "png", "gif"); FileTypes["media"] = new Array("avi", "flv", "swf", "wmv", "mp3", "wma", "mpg", "mpeg"); FileTypes["document"] = new Array("doc", "docx", "txt", "rtf", "pdf", "xls", "mdb", "html", "htm", "db"); RoxyUtils.FixPath = function (e) { if (!e) return ""; var t = e.replace(/\\/g, ""); t = t.replace(/\/\//g, "/"); t = t.replace(":/", "://"); return t }; RoxyUtils.FormatDate = function (e) { var t = ""; try { t = $.format.date(e, RoxyFilemanConf.DATEFORMAT) } catch (n) { alert(n); t = e.toString(); t = t.substr(0, t.indexOf("UTC")) } return t }; RoxyUtils.GetPath = function (e) { var t = ""; e = RoxyUtils.FixPath(e); if (e.indexOf("/") > -1) t = e.substring(0, e.lastIndexOf("/")); return t }; RoxyUtils.GetUrlParam = function (e, t) { var n = ""; if (!t) t = self.location.href; if (t.indexOf("?") > -1) { t = t.substr(t.indexOf("?") + 1); t = t.split("&"); for (i = 0; i < t.length; i++) { var r = t[i].split("="); if (r[0] && r[1] && r[0] == e) { n = r[1]; break } } } return n }; RoxyUtils.GetFilename = function (e) { var t = e; e = RoxyUtils.FixPath(e); if (e.indexOf("/") > -1) { t = e.substring(e.lastIndexOf("/") + 1) } return t }; RoxyUtils.MakePath = function () { ret = ""; if (arguments && arguments.length > 0) { for (var e = 0; e < arguments.length; e++) { ret += $.isArray(arguments[e]) ? arguments[e].join("/") : arguments[e]; if (e < arguments.length - 1) ret += "/" } ret = RoxyUtils.FixPath(ret) } return ret }; RoxyUtils.GetFileExt = function (e) { var t = ""; e = RoxyUtils.GetFilename(e); if (e.indexOf(".") > -1) { t = e.substring(e.lastIndexOf(".") + 1) } return t }; RoxyUtils.FileExists = function (e) { var t = false; $.ajax({ url: e, type: "HEAD", async: false, dataType: "text", success: function () { t = true } }); return t }; RoxyUtils.GetFileIcon = function (e) { ret = "images/filetypes/file_extension_" + RoxyUtils.GetFileExt(e).toLowerCase() + ".png"; if (!fileTypeIcons[RoxyUtils.GetFileExt(e).toLowerCase()]) { ret = "images/filetypes/unknown.png" } return ret }; RoxyUtils.GetFileSize = function (e) { var t = 0; $.ajax({ url: e, type: "HEAD", async: false, success: function (e, n, r) { t = r.getResponseHeader("Content-Length") } }); if (!t) t = 0; return t }; RoxyUtils.GetFileType = function (e) { var t = RoxyUtils.GetFileExt(e).toLowerCase(); if (t == "png" || t == "jpg" || t == "gif" || t == "jpeg") t = "image"; return t }; RoxyUtils.IsImage = function (e) { var t = false; if (RoxyUtils.GetFileType(e) == "image") t = true; return t }; RoxyUtils.FormatFileSize = function (e) { var t = "B"; if (!e) e = 0; if (e > 1024) { e = e / 1024; t = "KB" } if (e > 1024) { e = e / 1024; t = "MB" } e = new Number(e); return e.toFixed(2) + " " + t }; RoxyUtils.AddParam = function (e, t, n) { e += (e.indexOf("?") > -1 ? "&" : "?") + t + "=" + escape(n); return e }; RoxyUtils.SelectText = function (e, t, n) { try { var r = document.getElementById(e); if (r.createTextRange) { var i = r.createTextRange(); i.collapse(true); i.moveStart("character", t); i.moveEnd("character", n - t); i.select() } else if (r.setSelectionRange) { r.setSelectionRange(t, n) } else if (r.selectionStart) { r.selectionStart = t; r.selectionEnd = n } r.focus() } catch (s) { } }; RoxyUtils.LoadConfig = function () { $.ajax({ url: "conf.json", dataType: "json", async: false, success: function (e) { RoxyFilemanConf = e }, error: function (e) { alert(t("E_LoadingConf")) } }) }; RoxyUtils.LoadLang = function () { var e = ""; if (RoxyFilemanConf.LANG && RoxyFilemanConf.LANG.toLowerCase() == "auto") { var t = window.navigator.userLanguage || window.navigator.language; e = "lang/" + t.substr(0, 2) + ".json"; if (!RoxyUtils.FileExists(e)) e = "" } else { if (RoxyFilemanConf.LANG) { e = "lang/" + RoxyFilemanConf.LANG.substr(0, 2).toLowerCase() + ".json"; if (!RoxyUtils.FileExists(e)) e = "" } } if (!e) e = "lang/en.json"; $.ajax({ url: e, dataType: "json", async: false, success: function (e) { RoxyLang = e }, error: function (e) { alert("Error loading language file") } }) }; RoxyUtils.Translate = function () { RoxyUtils.LoadLang(); $("[data-lang-t]").each(function () { var e = $(this).attr("data-lang-t"); $(this).prop("title", t(e)) }); $("[data-lang-v]").each(function () { var e = $(this).attr("data-lang-v"); $(this).prop("value", t(e)) }); $("[data-lang]").each(function () { var e = $(this).attr("data-lang"); $(this).html(t(e)) }) }